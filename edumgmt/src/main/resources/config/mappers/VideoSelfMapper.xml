<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="net.shinc.orm.mybatis.mappers.edu.VideoSelfMapper">
	<resultMap id="BaseResultMap" type="VideoSelf">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="sh_video_base_id" property="videoBaseId" jdbcType="INTEGER" />
		<result column="type" property="type" jdbcType="VARCHAR" />
		<result column="sh_question_type_id" property="questionTypeId" jdbcType="INTEGER" />
	</resultMap>
	
	<resultMap id="VideoSelfAndRelevantInfoListMap" type="VideoSelf">
		<result column="question_id" property="videoBase.questionId" />
		<result column="title" property="videoBase.title" />
		<result column="desc" property="videoBase.desc" />
		<result column="courseId" property="videoBase.course.id"/>
		<result column="courseName" property="videoBase.course.name"/>
		<result column="courseShortName" property="videoBase.course.shortName"/>
		<result column="questionTypeName" property="questionType.name"/>
		<result column="lectureName" property="videoBase.lecture.name"/>
		<result column="lectureLevel" property="videoBase.lecture.level"/>
		<result column="lectureId" property="videoBase.lecture.id"/>
		<result column="questionTypeId" property="questionType.id"/>
		<result column="question_number" property="videoBase.questionNumber"/>
		<result column="difficulty" property="videoBase.difficulty"/>
		<!-- 关键字list -->
		<collection property="videoBase.keywordList" ofType="Keyword">
			<result column="keywordId" property="id" />
			<result column="keywordName" property="name" />
		</collection>
		<!-- 知识点list -->
		<collection property="videoBase.knowledgetPointList" ofType="KnowledgePoint">
			<result column="knowledgePointId" property="id" />
			<result column="knowledgePointName" property="name" />
		</collection>
		<!-- 视频详情list -->
		<collection property="videoBase.videoDetailList" ofType="VideoDetail">
			<result column="videoDetailUrl" property="url" />
		</collection>
	</resultMap>
	
	<select id="getVideoSelfAndRelevantInfoList" resultMap="VideoSelfAndRelevantInfoListMap" parameterType="VideoSelf">

		SELECT 
		    a_tab.id videoPastpaperId,
		    b_tab.question_id,
		    b_tab.title,
		    b_tab.desc,
		    b_tab.courseId,
		    b_tab.courseName,
		    b_tab.courseShortName,
		    b_tab.question_number,
		    b_tab.knowledgePointName,
		    b_tab.knowledgePointId,
		    b_tab.keywordName,
		    b_tab.keywordId,
		    b_tab.videoDetailUrl,
		    b_tab.lectureId,
		    b_tab.lectureName,
		    b_tab.lectureLevel,
	        b_tab.difficulty,
			e_tab.name questionTypeName,
		    e_tab.id questionTypeId
		    
		    
		FROM
		(SELECT 
			a_tab.id,
			a_tab.sh_video_base_id,
			a_tab.type,
			a_tab.sh_question_type_id
		FROM
			sh_video_self a_tab
		LIMIT 0 , 20)a_tab
	    
			left join (
			
	            SELECT 
				b_tab.id,
				b_tab.question_number,
				b_tab.question_id,
				b_tab.title,
				b_tab.desc,
				b_tab.sh_admin_user_id,
				b_tab.sh_course_id,
				b_tab.sh_lecture_id,
				a_tab.id courseId,
				a_tab.name courseName,
				a_tab.short courseShortName,
				c_tab.name lectureName,
				c_tab.level lectureLevel,
				c_tab.id lectureId,
	            d_tab.knowledgePointName,
				d_tab.knowledgePointId,
				e_tab.keywordName,
				e_tab.keywordId,
				b_tab.difficulty,
				f_tab.url videoDetailUrl
			FROM
				sh_video_base b_tab
	             
				left join sh_course a_tab on b_tab.sh_course_id = a_tab.id
				left join sh_lecture c_tab on c_tab.id = b_tab.sh_lecture_id
				left join (
								select a_tab.sh_video_base_id,b_tab.name knowledgePointName,b_tab.id knowledgePointId
				                from sh_video_base_knowledge_point a_tab 
								left join sh_knowledge_point b_tab on a_tab.sh_knowledge_point_id=b_tab.id
							 )d_tab on d_tab.sh_video_base_id = b_tab.id
				left join (
								select a_tab.sh_video_base_id,b_tab.name keywordName,b_tab.id keywordId
				                from sh_video_base_keyword a_tab 
								left join sh_keyword b_tab on a_tab.sh_keyword_id=b_tab.id
							 )e_tab on e_tab.sh_video_base_id = b_tab.id
				left join sh_video_detail f_tab on b_tab.id = f_tab.sh_video_base_id
					 
			) b_tab on a_tab.sh_video_base_id = b_tab.id
			
			left join sh_question_type e_tab on a_tab.sh_question_type_id = e_tab.id
		
			where 1=1
	     
	        
			<if test="id != null">
				and a_tab.id = #{id}
			</if>
			<if test="videoBase != null and videoBase.course != null and videoBase.course.id != null">
				and b_tab.courseId = #{videoBase.course.id}
			</if>
			<if test="videoBase != null and videoBase.difficulty != null">
				and b_tab.difficulty = #{videoBase.difficulty}
			</if>
			<if test="hasVideo != null and videoBase == '0'">
				and b_tab.videoDetailUrl is null
			</if>
			<if test="hasVideo != null and videoBase == '1'">
				and b_tab.videoDetailUrl is not null
			</if>
			
			<if test="videoBase != null and videoBase.keywordList != null and videoBase.keywordList.size() > 0">
				and b_tab.keywordName in   
                <foreach  
                    collection="videoBase.keywordList"  
                    item="keyword"  
                     open="("  
                    separator=","  
                    close=")">  
                    #{keyword.name} 
                </foreach>  
            </if>  
            
            <if test="videoBase != null and videoBase.knowledgetPointList != null and videoBase.knowledgetPointList.size() > 0">
				and b_tab.knowledgePointName in   
                <foreach  
                    collection="videoBase.knowledgetPointList"  
                    item="knowledgetPoint"  
                     open="("  
                    separator=","  
                    close=")">  
                    #{knowledgetPoint.name} 
                </foreach>  
            </if>


	</select>
	<select id="getVideoSelfList" resultMap="BaseResultMap" parameterType="VideoSelf">
		select
		id, sh_video_base_id, type, sh_question_type_id
		from sh_video_self
		where 1 = 1
		<if test="id != null">
			AND id=#{id}
		</if>
	</select>
	<select id="getVideoSelfListCount" resultType="java.lang.Integer" parameterType="VideoSelf">
		select count(*)
		from sh_video_self
		where 1 = 1
		<if test="id != null">
			AND id=#{id}
		</if>
	</select>
	<select id="getByVideoSelfById" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select
		id, sh_video_base_id, type, sh_question_type_id
		from sh_video_self
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteVideoSelfById" parameterType="java.lang.Integer">
		delete from sh_video_self
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insertVideoSelf" useGeneratedKeys="true" keyProperty="id" parameterType="VideoSelf">
		insert into sh_video_self
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="videoBaseId != null">
				sh_video_base_id,
			</if>
			<if test="type != null">
				type,
			</if>
			<if test="questionTypeId != null">
				sh_question_type_id,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="videoBaseId != null">
				#{videoBaseId,jdbcType=INTEGER},
			</if>
			<if test="type != null">
				#{type,jdbcType=VARCHAR},
			</if>
			<if test="questionTypeId != null">
				#{questionTypeId,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateVideoSelf" parameterType="VideoSelf">
		update sh_video_self
		<set>
			<if test="videoBaseId != null">
				sh_video_base_id = #{videoBaseId,jdbcType=INTEGER},
			</if>
			<if test="type != null">
				type = #{type,jdbcType=VARCHAR},
			</if>
			<if test="questionTypeId != null">
				sh_question_type_id = #{questionTypeId,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>