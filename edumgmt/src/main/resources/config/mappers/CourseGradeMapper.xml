<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="net.shinc.orm.mybatis.mappers.edu.CourseGradeMapper">
	<resultMap id="BaseResultMap" type="CourseGrade">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="sh_course_id" property="courseId" jdbcType="INTEGER" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="type" property="type" jdbcType="VARCHAR" />
		<result column="sh_material_version_id" property="materialVersionId" jdbcType="INTEGER" />
	</resultMap>
	<resultMap id="CourseResultMap" type="Course">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="short" property="shortName" />
		<result column="videoNum" property="videoNum" />
	</resultMap>
	<select id="findById" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select
		id, sh_course_id, name, type, sh_material_version_id
		from sh_course_grade
		where id = #{id,jdbcType=INTEGER}
	</select>
	<select id="findAll" parameterType="CourseGrade" resultMap="BaseResultMap">
		select
		id, sh_course_id, name, type, sh_material_version_id
		from sh_course_grade
		where 1 = 1
		
		<!-- 加入查询条件 -->
	</select>
	<select id="getCourseList" resultMap="CourseResultMap">
		SELECT 
		    t1.id,t1.name,t1.short, COUNT(t3.id) videoNum
		FROM
		    sh_course t1
		        LEFT JOIN
		    sh_course_grade t2 ON t1.id = t2.sh_course_id
		        LEFT JOIN
		    sh_course_grade_has_sh_video_base t3 ON t2.id = t3.sh_course_grade_id
            AND t3.id IS NOT NULL
            where 1=1
            <!-- 加入查询条件 -->
		GROUP BY t1.id
		
		
	</select>
	
	
	
	<delete id="deleteById" parameterType="java.lang.Integer">
		delete from sh_course_grade
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="CourseGrade">
		insert into sh_course_grade
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="courseId != null">
				sh_course_id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="type != null">
				type,
			</if>
			<if test="materialVersionId != null">
				sh_material_version_id,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="courseId != null">
				#{courseId,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				#{type,jdbcType=VARCHAR},
			</if>
			<if test="materialVersionId != null">
				#{materialVersionId,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="update" parameterType="CourseGrade">
		update sh_course_grade
		<set>
			<if test="courseId != null">
				sh_course_id = #{courseId,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				type = #{type,jdbcType=VARCHAR},
			</if>
			<if test="materialVersionId != null">
				sh_material_version_id = #{materialVersionId,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>