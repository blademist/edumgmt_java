<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="net.shinc.orm.mybatis.mappers.edu.VideoPointMapper">
	<resultMap id="BaseResultMap" type="VideoPoint">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="sh_video_base_id" property="videoBaseId" jdbcType="INTEGER" />
	</resultMap>

	<select id="getVideoPointAndRelevantInfoList" resultType="java.util.HashMap" >

		SELECT
		videoPointTab.id videoPointId,
		base.question_id,
		base.id,
		base.title,
		base.desc,
		base.difficulty,
		base.status,
		base.question_number,
		base.profile,
		base.updatetime,

		course.id courseId,
		course.name courseName,

		lecture.id lectureId,
		lecture.name lectureName,
		lecture.level lectureLevel,
		group_concat(distinct sk.name) keyword,
	    cast(group_concat(distinct sk.id) AS CHAR)  keywordId,
	    group_concat(distinct kp.name) knowledge,
	    cast(group_concat(distinct kp.id) AS CHAR)  knowledgeId

		FROM
		sh_video_base base
		INNER JOIN
		sh_video_point videoPointTab ON videoPointTab.sh_video_base_id = base.id

		LEFT JOIN
		sh_course course ON course.id = base.sh_course_id

		LEFT JOIN
		sh_lecture lecture ON lecture.id = base.sh_lecture_id
		left join sh_video_base_keyword kw on kw.sh_video_base_id = base.id
		left join sh_keyword sk on sk.id = kw.sh_keyword_id

		left join sh_video_base_knowledge_point pt on pt.sh_video_base_id = base.id
		left join sh_knowledge_point kp on kp.id = pt.sh_knowledge_point_id

		WHERE 1=1

		<if test="id != null">
			and base.id = #{id}
		</if>
	
		<if test="courseId != null and courseId != ''">
			and base.sh_course_id = #{courseId}
		</if>
		
		<if test="lectureId != null and lectureId != ''">
			and base.sh_lecture_id = #{lectureId}
		</if>
		<if test="questionDesc != null and questionDesc != ''">
			and base.title like '%${questionDesc}%'
		</if>
		<if test="difficulty != null and difficulty != ''">
			and base.difficulty = #{difficulty}
		</if>
		<if test="hasVideo == '1'">
			and exists (select 1 from sh_video_detail detail where detail.sh_video_base_id = base.id)
		</if>
		<if test="keywordList != null and keywordList.size() > 0">
			and kw.sh_keyword_id in 
			<foreach item="item" index="index" collection="keywordList"
		      open="(" separator="," close=")">
		        ${item}
		  	</foreach>
		</if>
		<if test="knowledgePointList != null and knowledgePointList.size() > 0">
			and pt.sh_knowledge_point_id  in 
			<foreach item="item" index="index" collection="knowledgePointList"
		      open="(" separator="," close=")">
		        ${item}
		  	</foreach>
		</if>
		group by id
	</select>

	<select id="getVideoPointList" resultMap="BaseResultMap" parameterType="VideoPoint">
		select
		id, sh_video_base_id
		from sh_video_point
		where 1 = 1
		<if test="id != null">
			AND id=#{id}
		</if>
	</select>
	<select id="getVideoPointListCount" resultType="java.lang.Integer" parameterType="VideoPoint">
		select count(*)
		from sh_video_point
		where 1 = 1
		<if test="id != null">
			AND id=#{id}
		</if>
	</select>
	<select id="getByVideoPointById" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select
		id, sh_video_base_id
		from sh_video_point
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteVideoPointById" parameterType="java.lang.Integer">
		delete from sh_video_point
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insertVideoPoint" useGeneratedKeys="true" keyProperty="id" parameterType="VideoPoint">
		insert into sh_video_point
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="videoBaseId != null">
				sh_video_base_id,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="videoBaseId != null">
				#{videoBaseId,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateVideoPoint" parameterType="VideoPoint">
		update sh_video_point
		<set>
			<if test="videoBaseId != null">
				sh_video_base_id = #{videoBaseId,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>

<!-- SELECT a_tab.id videoPointId, b_tab.question_id, b_tab.title, b_tab.desc, b_tab.courseId, b_tab.courseName, b_tab.courseShortName, b_tab.question_number, b_tab.knowledgePointName, 
	b_tab.knowledgePointId, b_tab.keywordName, b_tab.keywordId, b_tab.videoDetailUrl, b_tab.lectureId, b_tab.lectureName, b_tab.lectureLevel, b_tab.difficulty FROM (SELECT a_tab.id, 
	a_tab.sh_video_base_id FROM sh_video_point a_tab LIMIT 0 , 20)a_tab left join ( SELECT b_tab.id, b_tab.question_number, b_tab.question_id, b_tab.title, b_tab.desc, b_tab.sh_admin_user_id, 
	b_tab.sh_course_id, b_tab.sh_lecture_id, a_tab.id courseId, a_tab.name courseName, a_tab.short courseShortName, c_tab.name lectureName, c_tab.level lectureLevel, c_tab.id lectureId, 
	d_tab.knowledgePointName, d_tab.knowledgePointId, e_tab.keywordName, e_tab.keywordId, b_tab.difficulty, f_tab.url videoDetailUrl FROM sh_video_base b_tab left join sh_course 
	a_tab on b_tab.sh_course_id = a_tab.id left join sh_lecture c_tab on c_tab.id = b_tab.sh_lecture_id left join ( select a_tab.sh_video_base_id,b_tab.name knowledgePointName,b_tab.id 
	knowledgePointId from sh_video_base_knowledge_point a_tab left join sh_knowledge_point b_tab on a_tab.sh_knowledge_point_id=b_tab.id )d_tab on d_tab.sh_video_base_id = b_tab.id 
	left join ( select a_tab.sh_video_base_id,b_tab.name keywordName,b_tab.id keywordId from sh_video_base_keyword a_tab left join sh_keyword b_tab on a_tab.sh_keyword_id=b_tab.id 
	)e_tab on e_tab.sh_video_base_id = b_tab.id left join sh_video_detail f_tab on b_tab.id = f_tab.sh_video_base_id ) b_tab on a_tab.sh_video_base_id = b_tab.id where 1=1 -->